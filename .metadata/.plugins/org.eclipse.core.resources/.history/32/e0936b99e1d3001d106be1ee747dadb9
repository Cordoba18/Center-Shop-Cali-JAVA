package controlador;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import herramientas.Ayudas;
import modelo.Usuario;
import sql.Conexion;
import sql.Consultas;
import vista.Index;
import vista.PaginaDelProducto;
import vista.PerfilUsuario;
import vista.Producto;

public class PaginaProductoUnoController implements MouseListener, ActionListener{
	public int imagen=0;
	public int total =0;
	public boolean colores = true;
	public boolean tallas = true;
	Producto P;
	Index I;
	PaginaDelProducto PDP = new PaginaDelProducto();
	List <String> Imagen  = new ArrayList<>();
	Usuario u = new Usuario();
	Consultas consulta = new Consultas();
	public PaginaProductoUnoController(Producto P, Index I) {
		
	this.P = P;
	this.I = I;
	P.lblImagen.addMouseListener(this);
	P.lblAñadirALD.addMouseListener(this);
	PDP.btnDerecha.addActionListener(this);
	PDP.btnIzquierda.addActionListener(this);
	PDP.BoxColores.addActionListener(this);
	PDP.BoxTallas.addActionListener(this);
	PDP.BoxColores.addMouseListener(this);
	PDP.BoxTallas.addMouseListener(this);
	PDP.lblAñadirLD.addMouseListener(this);
	PDP.btnAgregarAlCarrito.addActionListener(this);
	P.lblQuitar.addMouseListener(this);
	P.BoxCantidades.addMouseListener(this);
	P.BoxCantidades.addActionListener(this);
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		if(e.getSource().equals(P.lblImagen)) {
			VerificarAñadirLD();
			VerificarAgregarAlCarrito();
			PDP.BoxColores.removeAllItems();
			PDP.BoxTallas.removeAllItems();
			PDP.BoxColores.setModel(new DefaultComboBoxModel(new String[] {"COLOR"}));
			PDP.BoxTallas.setModel(new DefaultComboBoxModel(new String[] {"TALLA"}));
			colores = true;
			tallas = true;
			Ayudas.ActualizarPanelFacil(PDP, I.IndexPanel);
			Consultas consulta = new Consultas();
			u.setId_producto(P.Id_Producto.getText());
			u.setId_empresa(P.Id_empresa.getText());
			consulta.DescripcionProducto(u);
			PDP.textDescripcion.setText(u.getDescripcion());;
			PDP.lblTitulo.setText(P.lblNombre.getText());
			consulta.ImagenYNombreEmpresa(u);
			PDP.lblEmpresa.setText(u.getNombre());
			AplicarImagen(PDP.ImagenEmpresa,"images//"+u.getImagen());
			PDP.lblPrecio.setText(P.lblPrecioAhora.getText());
			PDP.lblCantidadTallas.setVisible(false);
			PDP.ImagenColor.setVisible(false);
	        Conexion conectar = new Conexion(); 
	        PDP.btnDerecha.setVisible(true);
	        PDP.btnIzquierda.setVisible(false);
	        imagen = 0;
	        total = 0;
	        Imagen.clear();
	        String sql = "SELECT * FROM imagenes_productos WHERE id_empresa = "+u.getId_empresa()+" AND id_producto="+u.getId_producto()+" AND estado='activo'" ;
	        ResultSet rs;
	        boolean numero = false;
	        
	         	        try {
	         	        	
	         	            rs = conectar.consultar(sql);
	         	            while(rs.next()){
	         	                     numero = true;
	         	               
	         	                    Imagen.add((rs.getString("imagen")));
	         	                    total = total + 1;
	         	                 
	                     
	                 } 
	        } catch (Exception ex) {
	       System.out.println("Error en comparar clave(controlador productos): " + ex);
	        }
	        conectar.cerrar();
	        
	        AplicarImagenProducto(PDP.Imagen, "images//"+Imagen.get(imagen) );
	        
	        if(total-1 > imagen) {
	        	imagen = imagen + 1;
	        	PDP.btnDerecha.setVisible(true);
	        }else {
	        	PDP.btnDerecha.setVisible(false);
	        }
		}
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		if(e.getSource().equals(P.lblAñadirALD) || e.getSource().equals(PDP.lblAñadirLD)) {
			
			if(I.id_user.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "NO HAS INICIADO SESION");
			}else {
				u.setId(I.id_user.getText());
				u.setId_producto(P.Id_Producto.getText());
				u.setNombre(P.lblNombre.getText());
				u.setPrecio(P.lblPrecioAhora.getText());
				consulta.AñadirAListaDeDeseos(u);
				P.lblAñadirALD.setVisible(false);
				PDP.lblAñadirLD.setVisible(false);
				JOptionPane.showMessageDialog(null, "PRODUCTO AGREGADO A SU LISTA");
			}
		}
		
		if(e.getSource().equals(P.lblQuitar)) {
			Usuario u = new Usuario();
			u.setId(I.id_user.getText());
			u.setId_producto(P.Id_Producto.getText());
			if(I.Quitar.getText().equals("carrito")) {
				consulta.EliminarProductoCarritoC(u);
				JOptionPane.showMessageDialog(null, "PRODUCTO ELIMINADO DEL CARRITO");
				
			}else {
				consulta.EliminarProductoListaD(u);
				JOptionPane.showMessageDialog(null, "PRODUCTO ELIMINADO DE LA LISTA DE DESEOS");
			}
			PerfilUsuario PU = new PerfilUsuario();
			Ayudas.ActualizarPanelFacil(PU, I.IndexPanel);
			new PerfilUsuarioController(PU, I);
		}
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		if(e.getSource().equals(PDP.BoxTallas)) {
			if(tallas == true) {
			Consultas consulta = new Consultas();
			consulta.TallasProducto(PDP, P.Id_Producto.getText(), P.Id_empresa.getText());
			tallas = false;}
			}
		
		if(e.getSource().equals(P.BoxCantidades)) {
			
			Consultas consulta = new Consultas();
			Usuario u = new Usuario();
			u.setId(I.id_user.getText());
			u.setId_producto(P.Id_Producto.getText());
			consulta.CantidadesDisponibles(P, P.Id_Producto.getText(), null)
			}
		
		if(e.getSource().equals(PDP.BoxColores)) {
			
			if(colores == true) {
			Consultas consulta = new Consultas();
			consulta.ColoresProducto(PDP, P.Id_Producto.getText(), P.Id_empresa.getText());
			colores = false;}
			}
	}
	

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	private void AplicarImagen(JLabel NombreLabel, String root) {
		ImageIcon image = new ImageIcon(root);
		Icon icon = new ImageIcon(image.getImage().getScaledInstance(NombreLabel.getWidth(), NombreLabel.getHeight(), Image.SCALE_DEFAULT));
		NombreLabel.setIcon(icon);
		this.PDP.ImagenEmpresa.repaint();
		}
	
	private void AplicarImagenProducto(JLabel NombreLabel, String root) {
		ImageIcon image = new ImageIcon(root);
		Icon icon = new ImageIcon(image.getImage().getScaledInstance(NombreLabel.getWidth(), NombreLabel.getHeight(), Image.SCALE_DEFAULT));
		NombreLabel.setIcon(icon);
		this.PDP.Imagen.repaint();
		}
	private void AplicarImagenColor(JLabel NombreLabel, String root) {
		ImageIcon image = new ImageIcon(root);
		Icon icon = new ImageIcon(image.getImage().getScaledInstance(NombreLabel.getWidth(), NombreLabel.getHeight(), Image.SCALE_DEFAULT));
		NombreLabel.setIcon(icon);
		this.PDP.ImagenColor.repaint();
		}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		if(e.getSource().equals(P.BoxCantidades)) {
			u.setId_producto(P.Id_Producto.getText());
			u.setId(I.id_user.getText());
			u.setCantidad(String.valueOf(P.BoxCantidades.getSelectedItem()));
			consulta.InsertarCantidad(u);
			u.setPrecio(P.lblPrecioAhora.getText());
			int t = Integer.parseInt(u.getCantidad()) * Integer.parseInt(u.getPrecio());
			u.setPrecio(String.valueOf(t));
			consulta.InsertarTotalAlCarrito(u);
		}
		
		if(e.getSource().equals(PDP.btnAgregarAlCarrito)) {
			
			if(I.id_user.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "NO HAS INICIADO SESION");
			}else {
				u.setId(I.id_user.getText());
				u.setId_producto(P.Id_Producto.getText());
				u.setPrecio(P.lblPrecioAhora.getText());
				u.setColor(String.valueOf(PDP.BoxColores.getSelectedItem()));
				u.setTalla(String.valueOf(PDP.BoxTallas.getSelectedItem()));
				if(String.valueOf(PDP.BoxColores.getSelectedItem()).equals("COLOR") || String.valueOf(PDP.BoxTallas.getSelectedItem()).equals("TALLA") || String.valueOf(PDP.BoxColores.getSelectedItem()).isEmpty() || String.valueOf(PDP.BoxTallas.getSelectedItem()).isEmpty()) {
					JOptionPane.showMessageDialog(null, "SELECCIONE LA TALLA Y EL COLOR");
				}else {
				consulta.AñadirCarritoCompras(u);
				PDP.btnAgregarAlCarrito.setVisible(false);
				JOptionPane.showMessageDialog(null, "PRODUCTO AGREGADO A AL CARRITO");
				}
			}
}
		
		if(e.getSource().equals(PDP.btnDerecha)) {
			PDP.btnIzquierda.setVisible(true);
			 AplicarImagenProducto(PDP.Imagen, "images//"+Imagen.get(imagen));
			  if(total-1 > imagen) {
		        	imagen = imagen + 1;
		        	PDP.btnDerecha.setVisible(true);
		        }else {
		        	PDP.btnDerecha.setVisible(false);
		        }
			 
			
		}
		
		if(e.getSource().equals(PDP.btnIzquierda)) {
			PDP.btnDerecha.setVisible(true);
			imagen = imagen - 1;
			AplicarImagenProducto(PDP.Imagen, "images//"+Imagen.get(imagen));
			if(imagen == 0) {
				imagen = imagen + 1;
			PDP.btnIzquierda.setVisible(false);
			}
			else {
		        	PDP.btnDerecha.setVisible(true);
		}
			
		}
		
		if(e.getSource().equals(PDP.BoxColores)) {
			
			String Color = String.valueOf(PDP.BoxColores.getSelectedItem());
			u.setColor(Color);
			Consultas consulta = new Consultas();
			consulta.ImagenColor(u);
			AplicarImagenColor(PDP.ImagenColor, "images//"+u.getImagen());
			PDP.ImagenColor.setVisible(true);
		}
		
		if(e.getSource().equals(PDP.BoxTallas)) {
			
			String Talla = String.valueOf(PDP.BoxTallas.getSelectedItem());
			u.setTalla(Talla);
			Consultas consulta = new Consultas();
			consulta.CantidadTalla(u);
			PDP.lblCantidadTallas.setText(u.getCantidad() +" Unidades Restantes");
			PDP.lblCantidadTallas.setVisible(true);
		}
		}
	private void VerificarAñadirLD() {
		if(!I.id_user.getText().equals("")) {
			if(consulta.ExistenciaListaDeDeseos(I.id_user.getText(), P.Id_Producto.getText())) {
				PDP.lblAñadirLD.setVisible(false);
			}else {
				PDP.lblAñadirLD.setVisible(true);
			}
		}
	}
	private void VerificarAgregarAlCarrito() {
		if(!I.id_user.getText().equals("")) {
			if(consulta.ExistenciaCarritoDeCompras(I.id_user.getText(), P.Id_Producto.getText())) {
				PDP.btnAgregarAlCarrito.setVisible(false);
			}else {
				PDP.btnAgregarAlCarrito.setVisible(true);
			}
		}
	}
}